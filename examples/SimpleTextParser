//Displays simple text messages on Wemos (Lolin) D1 mini with Matrix LED Shield
//Created by Adam Jezek

#include <WEMOS_Matrix_LED.h>

String MessageStr = "Write your text here # #"; // Message to be displayed

int MessageSpeed = 600; // set speed in miliseconds

MLED mled(1); //set LED intensity (max 5?)

//Define your symbols here (for every symbol an if function has to be defined in the loop function) 

int MatrixA[8][8] = {  {0,0,0,1,1,0,0,0},
                       {0,0,1,0,0,1,0,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0}, 
                       {0,1,1,1,1,1,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                   };

int MatrixB[8][8] = {  {0,1,1,1,1,1,0,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0}, 
                       {0,1,1,1,1,1,0,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,1,1,1,1,0,0},
                   };

int MatrixC[8][8] = {  {0,0,1,1,1,1,0,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,0,0},
                       {0,1,0,0,0,0,0,0}, 
                       {0,1,0,0,0,0,0,0},
                       {0,1,0,0,0,0,0,0},
                       {0,1,0,0,0,0,1,0},
                       {0,0,1,1,1,1,0,0},
                   };

int MatrixD[8][8] = {  {0,1,1,1,1,0,0,0},
                       {0,1,0,0,0,1,0,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0}, 
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,1,0,0},
                       {0,1,1,1,1,0,0,0},
                   };

int MatrixE[8][8] = {  {0,1,1,1,1,1,1,0},
                       {0,1,0,0,0,0,0,0},
                       {0,1,0,0,0,0,0,0},
                       {0,1,0,0,0,0,0,0}, 
                       {0,1,1,1,1,1,0,0},
                       {0,1,0,0,0,0,0,0},
                       {0,1,0,0,0,0,0,0},
                       {0,1,1,1,1,1,1,0},
                   };

int MatrixF[8][8] = {  {0,1,1,1,1,1,1,0},
                       {0,1,0,0,0,0,0,0},
                       {0,1,0,0,0,0,0,0},
                       {0,1,0,0,0,0,0,0}, 
                       {0,1,1,1,1,1,0,0},
                       {0,1,0,0,0,0,0,0},
                       {0,1,0,0,0,0,0,0},
                       {0,1,0,0,0,0,0,0},
                   };

int MatrixG[8][8] = {  {0,0,1,1,1,1,0,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,0,0},
                       {0,1,0,0,0,0,0,0}, 
                       {0,1,0,0,1,1,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,0,1,1,1,1,0,0},
                   };

int MatrixH[8][8] = {  {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0}, 
                       {0,1,1,1,1,1,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                   };

int MatrixI[8][8] = {  {0,0,1,1,1,0,0,0},
                       {0,0,0,1,0,0,0,0},
                       {0,0,0,1,0,0,0,0},
                       {0,0,0,1,0,0,0,0}, 
                       {0,0,0,1,0,0,0,0},
                       {0,0,0,1,0,0,0,0},
                       {0,0,0,1,0,0,0,0},
                       {0,0,1,1,1,0,0,0},
                   };

int MatrixJ[8][8] = {  {0,1,1,1,1,1,1,0},
                       {0,0,0,0,0,0,1,0},
                       {0,0,0,0,0,0,1,0},
                       {0,0,0,0,0,0,1,0}, 
                       {0,0,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,0,1,1,1,1,0,0},
                   };

int MatrixK[8][8] = {  {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,1,0,0},
                       {0,1,0,0,1,0,0,0},
                       {0,1,0,1,0,0,0,0}, 
                       {0,1,1,1,0,0,0,0},
                       {0,1,0,0,1,0,0,0},
                       {0,1,0,0,0,1,0,0},
                       {0,1,0,0,0,0,1,0},
                   };

int MatrixL[8][8] = {  {0,1,0,0,0,0,0,0},
                       {0,1,0,0,0,0,0,0},
                       {0,1,0,0,0,0,0,0},
                       {0,1,0,0,0,0,0,0}, 
                       {0,1,0,0,0,0,0,0},
                       {0,1,0,0,0,0,0,0},
                       {0,1,0,0,0,0,0,0},
                       {0,1,1,1,1,1,1,0},
                   };

int MatrixM[8][8] = {  {0,1,0,0,0,0,1,0},
                       {0,1,1,0,0,1,1,0},
                       {0,1,0,1,1,0,1,0},
                       {0,1,0,0,0,0,1,0}, 
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                   };

int MatrixN[8][8] = {  {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,1,0,0,0,1,0},
                       {0,1,0,1,0,0,1,0}, 
                       {0,1,0,0,1,0,1,0},
                       {0,1,0,0,0,1,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                   };
                 
int MatrixO[8][8] = {  {0,0,1,1,1,1,0,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0}, 
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,0,1,1,1,1,0,0},
                   };

int MatrixP[8][8] = {  {0,1,1,1,1,1,0,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0}, 
                       {0,1,1,1,1,1,0,0},
                       {0,1,0,0,0,0,0,0},
                       {0,1,0,0,0,0,0,0},
                       {0,1,0,0,0,0,0,0},
                   };
                   
int MatrixQ[8][8] = {  {0,0,1,1,1,1,0,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0}, 
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,1,0,1,0},
                       {0,0,1,1,1,1,0,0},
                       {0,0,0,0,0,0,1,0},
                   };

int MatrixR[8][8] = {  {0,1,1,1,1,1,0,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0}, 
                       {0,1,1,1,1,1,0,0},
                       {0,1,0,0,1,0,0,0},
                       {0,1,0,0,0,1,0,0},
                       {0,1,0,0,0,0,1,0},
                   };

int MatrixS[8][8] = {  {0,0,1,1,1,1,0,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,0,0},
                       {0,0,1,0,0,0,0,0}, 
                       {0,0,0,1,1,1,0,0},
                       {0,0,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,0,1,1,1,1,0,0},
                   };

int MatrixT[8][8] = {  {0,1,1,1,1,1,1,0},
                       {0,0,0,1,0,0,0,0},
                       {0,0,0,1,0,0,0,0},
                       {0,0,0,1,0,0,0,0}, 
                       {0,0,0,1,0,0,0,0},
                       {0,0,0,1,0,0,0,0},
                       {0,0,0,1,0,0,0,0},
                       {0,0,0,1,0,0,0,0},
                   };                

int MatrixU[8][8] = {  {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0}, 
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,0,1,1,1,1,0,0},
                   };

int MatrixV[8][8] = {  {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0}, 
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,0,1,0,0,1,0,0},
                       {0,0,0,1,1,0,0,0},
                   };
                   
int MatrixW[8][8] = {  {1,0,0,0,0,0,0,1},
                       {1,0,0,0,0,0,0,1},
                       {1,0,0,0,0,0,0,1},
                       {1,0,0,0,0,0,0,1}, 
                       {1,0,0,1,1,0,0,1},
                       {1,0,0,1,1,0,0,1},
                       {0,1,0,1,1,0,1,0},
                       {0,0,1,0,0,1,0,0},
                   };

int MatrixX[8][8] = {  {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,0,1,0,0,1,0,0},
                       {0,0,0,1,1,0,0,0}, 
                       {0,0,0,1,1,0,0,0},
                       {0,0,1,0,0,1,0,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                   };

int MatrixY[8][8] = {  {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,0,1,0,0,1,0,0},
                       {0,0,0,1,1,0,0,0}, 
                       {0,0,0,1,0,0,0,0},
                       {0,0,0,1,0,0,0,0},
                       {0,0,0,1,0,0,0,0},
                       {0,0,0,1,0,0,0,0},
                   };

int MatrixZ[8][8] = {  {0,1,1,1,1,1,1,0},
                       {0,0,0,0,0,0,1,0},
                       {0,0,0,0,0,1,0,0},
                       {0,0,0,0,1,0,0,0}, 
                       {0,0,0,1,0,0,0,0},
                       {0,0,1,0,0,0,0,0},
                       {0,1,0,0,0,0,0,0},
                       {0,1,1,1,1,1,1,0},
                   };


int Matrix1[8][8] = {  {0,0,0,0,1,0,0,0},
                       {0,0,0,1,1,0,0,0},
                       {0,0,1,0,1,0,0,0},
                       {0,0,0,0,1,0,0,0}, 
                       {0,0,0,0,1,0,0,0},
                       {0,0,0,0,1,0,0,0},
                       {0,0,0,0,1,0,0,0},
                       {0,0,0,1,1,1,0,0},
                   };

int Matrix2[8][8] = {  {0,0,1,1,1,1,0,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,0,0,0,0,1,0,0}, 
                       {0,0,0,0,1,0,0,0},
                       {0,0,0,1,0,0,0,0},
                       {0,0,1,0,0,0,0,0},
                       {0,1,1,1,1,1,1,0},
                   };

int Matrix3[8][8] = {  {0,0,1,1,1,1,0,0},
                       {0,1,0,0,0,0,1,0},
                       {0,0,0,0,0,1,0,0},
                       {0,0,0,0,1,1,0,0}, 
                       {0,0,0,0,0,0,1,0},
                       {0,0,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,0,1,1,1,1,0,0},
                   };

int Matrix4[8][8] = {  {0,1,0,0,0,0,0,0},
                       {0,1,0,0,0,0,0,0},
                       {0,1,0,0,1,0,0,0},
                       {0,1,0,0,1,0,0,0}, 
                       {0,1,1,1,1,1,1,0},
                       {0,0,0,0,1,0,0,0},
                       {0,0,0,0,1,0,0,0},
                       {0,0,0,1,1,1,0,0},
                   };

int Matrix5[8][8] = {  {0,1,1,1,1,1,1,0},
                       {0,1,0,0,0,0,0,0},
                       {0,1,0,0,0,0,0,0},
                       {0,1,1,1,1,1,0,0}, 
                       {0,0,0,0,0,0,1,0},
                       {0,0,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,0,1,1,1,1,0,0},
                   };

int Matrix6[8][8] = {  {0,0,1,1,1,1,0,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,0,0},
                       {0,1,1,1,1,1,0,0}, 
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,0,1,1,1,1,0,0},
                   };

int Matrix7[8][8] = {  {0,1,1,1,1,1,1,0},
                       {0,0,0,0,0,0,1,0},
                       {0,0,0,0,0,1,0,0},
                       {0,0,0,0,1,0,0,0},                       
                       {0,0,0,1,0,0,0,0}, 
                       {0,0,0,1,0,0,0,0},
                       {0,0,0,1,0,0,0,0},
                       {0,0,0,1,0,0,0,0},
                   };

int Matrix8[8][8] = {  {0,0,1,1,1,1,0,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,0,1,1,1,1,0,0},
                       {0,1,0,0,0,0,1,0}, 
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,0,1,1,1,1,0,0},
                   };

int Matrix9[8][8] = {  {0,0,1,1,1,1,0,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0}, 
                       {0,0,1,1,1,1,1,0},
                       {0,0,0,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,0,1,1,1,1,0,0},
                   };

int Matrix0[8][8] = {  {0,0,1,1,1,1,0,0},
                       {0,1,0,0,0,0,1,0},
                       {0,1,0,0,0,1,1,0},
                       {0,1,0,0,1,0,1,0}, 
                       {0,1,0,1,0,0,1,0},
                       {0,1,1,0,0,0,1,0},
                       {0,1,0,0,0,0,1,0},
                       {0,0,1,1,1,1,0,0},
                   };




int MatrixQuest[8][8] = {  {0,0,1,1,1,1,0,0},
                           {0,1,0,0,0,0,1,0},
                           {0,1,0,0,0,0,1,0},
                           {0,0,0,0,0,1,0,0}, 
                           {0,0,0,1,1,0,0,0},
                           {0,0,0,0,0,0,0,0},
                           {0,0,0,1,1,0,0,0},
                           {0,0,0,1,1,0,0,0},
                   };

int MatrixExclam[8][8] = {   {0,1,1,1,1,1,1,0},
                             {0,0,1,1,1,1,0,0},
                             {0,0,1,1,1,1,0,0},
                             {0,0,0,1,1,0,0,0}, 
                             {0,0,0,1,1,0,0,0},
                             {0,0,0,0,0,0,0,0},
                             {0,0,0,1,1,0,0,0},
                             {0,0,0,1,1,0,0,0},
                         };

int MatrixPeriod[8][8] = {   {0,0,0,0,0,0,0,0},
                             {0,0,0,0,0,0,0,0},
                             {0,0,0,0,0,0,0,0},
                             {0,0,0,0,0,0,0,0}, 
                             {0,0,0,0,0,0,0,0},
                             {0,0,0,0,0,0,0,0},
                             {0,0,0,1,1,0,0,0},
                             {0,0,0,1,1,0,0,0},
                         };

int MatrixComma[8][8] = {  {0,0,0,0,0,0,0,0},
                           {0,0,0,0,0,0,0,0},
                           {0,0,0,0,0,0,0,0},
                           {0,0,0,0,0,0,0,0}, 
                           {0,0,0,0,0,0,0,0},
                           {0,0,0,1,1,0,0,0},
                           {0,0,0,0,1,0,0,0},
                           {0,0,0,1,0,0,0,0},
                       };

int MatrixColon[8][8] = {  {0,0,0,0,0,0,0,0},
                           {0,0,0,0,0,0,0,0},
                           {0,0,0,1,1,0,0,0},
                           {0,0,0,1,1,0,0,0}, 
                           {0,0,0,0,0,0,0,0},
                           {0,0,0,1,1,0,0,0},
                           {0,0,0,1,1,0,0,0},
                           {0,0,0,0,0,0,0,0},
                       };

int MatrixSemicolon[8][8] = {  {0,0,0,0,0,0,0,0},
                               {0,0,0,0,0,0,0,0},
                               {0,0,0,1,1,0,0,0},
                               {0,0,0,1,1,0,0,0}, 
                               {0,0,0,0,0,0,0,0},
                               {0,0,0,1,1,0,0,0},
                               {0,0,0,0,1,0,0,0},
                               {0,0,0,1,0,0,0,0},
                           };

int MatrixSmile1[8][8] = {  {0,0,0,0,0,0,0,0},
                            {0,1,1,0,0,1,1,0},
                            {0,1,1,0,0,1,1,0},
                            {0,0,0,0,0,0,0,0},
                            {0,0,0,0,0,0,0,0}, 
                            {0,1,0,0,0,0,1,0},
                            {0,0,1,1,1,1,0,0},
                            {0,0,0,0,0,0,0,0},                            
                   };

int MatrixHeart[8][8] = {  {0,0,0,0,0,0,0,0},
                           {0,1,1,0,0,1,1,0},
                           {1,0,0,1,1,0,0,1},
                           {1,0,0,0,0,0,0,1}, 
                           {1,0,0,0,0,0,0,1},
                           {0,1,0,0,0,0,1,0},
                           {0,0,1,0,0,1,0,0},
                           {0,0,0,1,1,0,0,0},
                        };

int MatrixEmpty[8][8] = {  {0,0,0,0,0,0,0,0},
                           {0,0,0,0,0,0,0,0},
                           {0,0,0,0,0,0,0,0},
                           {0,0,0,0,0,0,0,0}, 
                           {0,0,0,0,0,0,0,0},
                           {0,0,0,0,0,0,0,0},
                           {0,0,0,0,0,0,0,0},
                           {0,0,0,0,0,0,0,0},
                       };


/*
void copyMatrix(int src[8][8], int dst[8][8], int len) {
    for (int i = 0; i < len; i++) {
        for (int j = 0; j < len; j++) {
            dst[i][j] = src[i][j];
        }
    }
}
*/

// function that actualy renders every symbol on the LED Matrix

void matrixRender(int src[8][8]) {
  for(int y=0;y<8;y++)
  {
    for(int x=0;x<8;x++)
    {
        if (src[x][y] == 1)
        {
            mled.dot(x,y); // draw dot
        }
        else
        {
            mled.dot(x,y,0); //clear dot    
        }  
     } 
     mled.display(); 
  }  
  
}

void setup() {
  // put your setup code here, to run once: 
}

void loop() {

// code that will parse the string and call render function for every defined symbol in it

int MessageLen = MessageStr.length() + 1;
char myMessage[MessageLen];
MessageStr.toUpperCase();
MessageStr.toCharArray(myMessage, MessageLen);

  for(int a=0;a < MessageLen + 1;a++)
  {
    if (myMessage[a] == 'A') { matrixRender(MatrixA); }
    if (myMessage[a] == 'B') { matrixRender(MatrixB); }
    if (myMessage[a] == 'C') { matrixRender(MatrixC); }
    if (myMessage[a] == 'D') { matrixRender(MatrixD); }
    if (myMessage[a] == 'E') { matrixRender(MatrixE); }
    if (myMessage[a] == 'F') { matrixRender(MatrixF); }
    if (myMessage[a] == 'G') { matrixRender(MatrixG); }
    if (myMessage[a] == 'H') { matrixRender(MatrixH); }
    if (myMessage[a] == 'I') { matrixRender(MatrixI); }
    if (myMessage[a] == 'J') { matrixRender(MatrixJ); }
    if (myMessage[a] == 'K') { matrixRender(MatrixK); }
    if (myMessage[a] == 'L') { matrixRender(MatrixL); }
    if (myMessage[a] == 'M') { matrixRender(MatrixM); }
    if (myMessage[a] == 'N') { matrixRender(MatrixN); }
    if (myMessage[a] == 'O') { matrixRender(MatrixO); }
    if (myMessage[a] == 'P') { matrixRender(MatrixP); }
    if (myMessage[a] == 'Q') { matrixRender(MatrixQ); }
    if (myMessage[a] == 'R') { matrixRender(MatrixR); }
    if (myMessage[a] == 'S') { matrixRender(MatrixS); }
    if (myMessage[a] == 'T') { matrixRender(MatrixT); }
    if (myMessage[a] == 'U') { matrixRender(MatrixU); }
    if (myMessage[a] == 'V') { matrixRender(MatrixV); }
    if (myMessage[a] == 'W') { matrixRender(MatrixW); }
    if (myMessage[a] == 'X') { matrixRender(MatrixX); }
    if (myMessage[a] == 'Y') { matrixRender(MatrixY); }
    if (myMessage[a] == 'Z') { matrixRender(MatrixZ); }
    if (myMessage[a] == '1') { matrixRender(Matrix1); }
    if (myMessage[a] == '2') { matrixRender(Matrix2); }
    if (myMessage[a] == '3') { matrixRender(Matrix3); }
    if (myMessage[a] == '4') { matrixRender(Matrix4); }
    if (myMessage[a] == '5') { matrixRender(Matrix5); }
    if (myMessage[a] == '6') { matrixRender(Matrix6); }
    if (myMessage[a] == '7') { matrixRender(Matrix7); }
    if (myMessage[a] == '8') { matrixRender(Matrix8); }
    if (myMessage[a] == '9') { matrixRender(Matrix9); }
    if (myMessage[a] == '0') { matrixRender(Matrix0); }
    if (myMessage[a] == '?') { matrixRender(MatrixQuest); }
    if (myMessage[a] == '!') { matrixRender(MatrixExclam); }
    if (myMessage[a] == '.') { matrixRender(MatrixPeriod); }
    if (myMessage[a] == ',') { matrixRender(MatrixComma); }
    if (myMessage[a] == ':') { matrixRender(MatrixColon); }
    if (myMessage[a] == ';') { matrixRender(MatrixSemicolon); }
    if (myMessage[a] == '#') { matrixRender(MatrixHeart); }
    if (myMessage[a] == '@') { matrixRender(MatrixSmile1); }
    if (myMessage[a] == ' ') { matrixRender(MatrixEmpty); }
    if (myMessage[a] == NULL) { matrixRender(MatrixEmpty); }
    delay(MessageSpeed);
  }
}
